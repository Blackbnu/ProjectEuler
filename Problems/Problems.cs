using NUnit.Framework;
using ProblemsSolver;
using ProblemsSolver.Problem2;
using ProblemsSolver.Problem2.Solvers;
using SharpTestsEx;

namespace Problems
{
    public class Problems
    {
        [Test]
        public void ProblemId1()
        {
            #region Description
            // If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
            //Find the sum of all the multiples of 3 or 5 below 1000.
            #endregion

            new Problem1Solver().Solve().Should().Not.Be(233618);
        }

        [Test]
        public void ProblemId2()
        {
            #region Description
            //Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
            //1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
            //By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
            #endregion

            new Problem2Solver(new MetodoIterativoSemIf()).Solve().Should().Be(4613732);
            new Problem2Solver(new MetodoIterativoComIf()).Solve().Should().Be(4613732);
        }

        [Test]
        public void ProblemId3()
        {
            #region Description
            //The prime factors of 13195 are 5, 7, 13 and 29.
            //What is the largest prime factor of the number 600851475143 ?
            #endregion
        }
    }
}
